name: Code Quality

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8 ckanext --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan
      - name: Run flake8
        run: flake8 ckanext --count --max-line-length=127 --statistics --exclude ckan
  test:
    name: Test apicatalog extensions
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:2.9
    services:
      solr:
        image: ckan/ckan-solr-dev:2.9
      postgres:
        image: ckan/ckan-postgres-dev:2.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install requirements
        run: |
          cd ckanext/ckanext-apicatalog
          pip install -r dev-requirements.txt
          pip install -e .

          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

          cd ../ckanext-scheming
          pip install -e .

          cd ../ckanext-fluent
          pip install -e .

          cd ../ckanext-markdown_editor
          pip install -e .

          cd ../ckanext-apply_permissions_for_service
          pip install -e .

          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

      - name: Setup extension
        run: |
          ckan -c ckanext/ckanext-apicatalog/test.ini db init

      - name: Run tests
        run: |
          pytest --ckan-ini=ckanext/ckanext-apicatalog/test.ini --cov=ckanext.apicatalog --disable-warnings ckanext/ckanext-apicatalog/ckanext/apicatalog/tests
          pytest --ckan-ini=ckanext/ckanext-apply_permissions_for_service/test.ini --cov=ckanext.apply_permissions_for_service --disable-warnings ckanext/ckanext-apply_permissions_for_service/ckanext/apply_permissions_for_service/tests

  text-xroad:
    name: Test xroad integration
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:2.9
    services:
      solr:
        image: ckan/ckan-solr-dev:2.9
      postgres:
        image: ckan/ckan-postgres-dev:2.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
      - name: Add build dependencies to container
        run: |
          apk add --update --no-progress \
          tar
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/cache@v3
        with:
          path: /root/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install xroad integration requirements
        run: |

          cd ckanext/ckanext-apicatalog
          sudo -H pip install -r dev-requirements.txt
          sudo -H pip install -e .

          cd ../ckanext-harvest
          sudo -H pip install -r pip-requirements.txt
          sudo -H pip install -e .

          cd ../ckanext-scheming
          sudo -H pip install -e .

          cd ../ckanext-fluent
          sudo -H pip install -e .

          cd ../ckanext-markdown_editor
          sudo -H pip install -e .

          cd ../ckanext-xroad_integration
          sudo -H pip install -r requirements.txt
          sudo -H pip install -r dev-requirements.txt
          sudo -H pip install -e .

          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

      - name: setup xroad integration extension
        run: |
          # Enable plugins in test.ini temporarily
          sed -i -e 's/#ckan.plugins/ckan.plugins/' test.ini
          
          ckan -c ckanext/ckanext-xroad_integration/test.ini db init
          ckan -c ckanext/ckanext-xroad_integration/test.ini harvester initdb
          ckan -c ckanext/ckanext-xroad_integration/test.ini xroad init-db

          # Disable plugins in test.ini
          sed -i -e 's/ckan.plugins/#ckan.plugins/' test.ini
      - name: Run xroad integration tests
        run: pytest --ckan-ini=ckanext/ckanext-xroad_integration/test.ini --cov=ckanext.xroad_integration --disable-warnings ckanext/ckanext-xroad_integration/ckanext/xroad_integration/tests
