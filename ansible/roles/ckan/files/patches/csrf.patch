diff --git a/ckan/controllers/admin.py b/ckan/controllers/admin.py
index bed19630c..e435a3a3c 100644
--- a/ckan/controllers/admin.py
+++ b/ckan/controllers/admin.py
@@ -6,6 +6,7 @@ import ckan.lib.base as base
 import ckan.lib.helpers as h
 import ckan.lib.app_globals as app_globals
 import ckan.lib.navl.dictization_functions as dict_fns
+import ckan.lib.csrf_token as csrf_token
 import ckan.model as model
 import ckan.logic as logic
 from ckan.controllers.home import CACHE_PARAMETERS
@@ -72,6 +73,13 @@ class AdminController(base.BaseController):
             h.redirect_to(controller='admin', action='config')
 
         if request.method == 'POST':
+            try:
+                csrf_token.validate(request.POST.get('csrf-token', ''))
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                return base.render('admin/confirm_reset.html')
+            del request.POST['csrf-token']
+
             # remove sys info items
             for item in self._get_config_form_items():
                 name = item['name']
@@ -95,10 +103,17 @@ class AdminController(base.BaseController):
                             logic.parse_params(
                                 request.POST, ignore_keys=CACHE_PARAMETERS))))
 
+                csrf_token.validate(data_dict.get('csrf-token', ''))
                 del data_dict['save']
+                del data_dict['csrf-token']
 
                 data = logic.get_action('config_option_update')(
                     {'user': c.user}, data_dict)
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                vars = {'data': data, 'errors': {},
+                        'error_summary': {}, 'form_items': items}
+                return base.render('admin/config.html', extra_vars=vars)
             except logic.ValidationError as e:
                 errors = e.error_dict
                 error_summary = e.error_summary
@@ -133,6 +148,13 @@ class AdminController(base.BaseController):
                                   in request.params):
             return base.render('admin/trash.html')
         else:
+            try:
+                csrf_token.validate(request.POST.get('csrf-token', ''))
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                return base.render('admin/trash.html')
+            del request.POST['csrf-token']
+
             # NB: we repeat retrieval of of revisions
             # this is obviously inefficient (but probably not *that* bad)
             # but has to be done to avoid (odd) sqlalchemy errors (when doing
diff --git a/ckan/controllers/group.py b/ckan/controllers/group.py
index 3e9e99d55..e2701534e 100644
--- a/ckan/controllers/group.py
+++ b/ckan/controllers/group.py
@@ -16,6 +16,7 @@ import ckan.lib.search as search
 import ckan.model as model
 import ckan.authz as authz
 import ckan.lib.plugins
+import ckan.lib.csrf_token as csrf_token
 import ckan.plugins as plugins
 from ckan.common import c, config, request, _
 
@@ -538,6 +539,7 @@ class GroupController(base.BaseController):
         try:
             data_dict = clean_dict(dict_fns.unflatten(
                 tuplize_dict(parse_params(request.params))))
+            csrf_token.validate(data_dict.get('csrf-token', ''))
             data_dict['type'] = group_type or 'group'
             context['message'] = data_dict.get('log_message', '')
             data_dict['users'] = [{'name': c.user, 'capacity': 'admin'}]
@@ -553,6 +555,9 @@ class GroupController(base.BaseController):
             errors = e.error_dict
             error_summary = e.error_summary
             return self.new(data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.new(data_dict)
 
     def _force_reindex(self, grp):
         ''' When the group name has changed, we need to force a reindex
@@ -567,6 +572,7 @@ class GroupController(base.BaseController):
         try:
             data_dict = clean_dict(dict_fns.unflatten(
                 tuplize_dict(parse_params(request.params))))
+            csrf_token.validate(data_dict.get('csrf-token', ''))
             context['message'] = data_dict.get('log_message', '')
             data_dict['id'] = id
             context['allow_partial_update'] = True
@@ -583,6 +589,9 @@ class GroupController(base.BaseController):
             errors = e.error_dict
             error_summary = e.error_summary
             return self.edit(id, data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(id, data_dict)
 
     def authz(self, id):
         group = model.Group.get(id)
@@ -628,6 +637,7 @@ class GroupController(base.BaseController):
 
         try:
             if request.method == 'POST':
+                csrf_token.validate(request.POST.get('csrf-token', ''))
                 self._action('group_delete')(context, {'id': id})
                 if group_type == 'organization':
                     h.flash_notice(_('Organization has been deleted.'))
@@ -640,6 +650,9 @@ class GroupController(base.BaseController):
             c.group_dict = self._action('group_show')(context, {'id': id})
         except NotAuthorized:
             abort(403, _('Unauthorized to delete group %s') % '')
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(id)
         except NotFound:
             abort(404, _('Group not found'))
         except ValidationError as e:
@@ -692,6 +705,7 @@ class GroupController(base.BaseController):
             if request.method == 'POST':
                 data_dict = clean_dict(dict_fns.unflatten(
                     tuplize_dict(parse_params(request.params))))
+                csrf_token.validate(data_dict.get('csrf-token', ''))
                 data_dict['id'] = id
 
                 email = data_dict.get('email')
@@ -726,6 +740,8 @@ class GroupController(base.BaseController):
             abort(404, _('Group not found'))
         except ValidationError as e:
             h.flash_error(e.error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
         return self._render_template('group/member_new.html', group_type)
 
     def member_delete(self, id):
@@ -745,6 +761,7 @@ class GroupController(base.BaseController):
         try:
             user_id = request.params.get('user')
             if request.method == 'POST':
+                csrf_token.validate(request.POST.get('csrf-token', ''))
                 self._action('group_member_delete')(
                     context, {'id': id, 'user_id': user_id})
                 h.flash_notice(_('Group member has been deleted.'))
@@ -756,6 +773,9 @@ class GroupController(base.BaseController):
             abort(403, _('Unauthorized to delete group %s members') % '')
         except NotFound:
             abort(404, _('Group not found'))
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self._render_template('group/members.html', group_type)
         return self._render_template('group/confirm_delete_member.html',
                                      group_type)
 
diff --git a/ckan/controllers/package.py b/ckan/controllers/package.py
index ebfe82c70..f67cf3dc1 100644
--- a/ckan/controllers/package.py
+++ b/ckan/controllers/package.py
@@ -21,6 +21,7 @@ import ckan.model as model
 import ckan.lib.datapreview as datapreview
 import ckan.lib.plugins
 import ckan.lib.uploader as uploader
+import ckan.lib.csrf_token as csrf_token
 import ckan.plugins as p
 import ckan.lib.render
 
@@ -583,6 +584,7 @@ class PackageController(base.BaseController):
 
             data['package_id'] = id
             try:
+                csrf_token.validate(data.get('csrf-token', ''))
                 if resource_id:
                     data['id'] = resource_id
                     get_action('resource_update')(context, data)
@@ -595,6 +597,11 @@ class PackageController(base.BaseController):
                                           errors, error_summary)
             except NotAuthorized:
                 abort(403, _('Unauthorized to edit this resource'))
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                redirect(h.url_for(controller='package',
+                                   action='new_resource', id=id))
+                return
             h.redirect_to(controller='package', action='resource_read', id=id,
                           resource_id=resource_id)
 
@@ -693,6 +700,7 @@ class PackageController(base.BaseController):
 
             data['package_id'] = id
             try:
+                csrf_token.validate(data.get('csrf-token', ''))
                 if resource_id:
                     data['id'] = resource_id
                     get_action('resource_update')(context, data)
@@ -707,6 +715,11 @@ class PackageController(base.BaseController):
             except NotFound:
                 abort(404, _('The dataset {id} could not be found.'
                              ).format(id=id))
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                redirect(h.url_for(controller='package',
+                                   action='new_resource', id=id))
+                return
             if save_action == 'go-metadata':
                 # XXX race condition if another user edits/deletes
                 data_dict = get_action('package_show')(context, {'id': id})
@@ -891,6 +904,7 @@ class PackageController(base.BaseController):
         try:
             data_dict = clean_dict(dict_fns.unflatten(
                 tuplize_dict(parse_params(request.POST))))
+            csrf_token.validate(data_dict.get('csrf-token', ''))
             if ckan_phase:
                 # prevent clearing of groups etc
                 context['allow_partial_update'] = True
@@ -963,6 +977,9 @@ class PackageController(base.BaseController):
                                  errors, error_summary)
             data_dict['state'] = 'none'
             return self.new(data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.new(data_dict)
 
     def _save_edit(self, name_or_id, context, package_type=None):
         from ckan.lib.search import SearchIndexError
@@ -971,6 +988,9 @@ class PackageController(base.BaseController):
         try:
             data_dict = clean_dict(dict_fns.unflatten(
                 tuplize_dict(parse_params(request.POST))))
+
+            csrf_token.validate(data_dict.get('csrf-token', ''))
+
             if '_ckan_phase' in data_dict:
                 # we allow partial updates to not destroy existing resources
                 context['allow_partial_update'] = True
@@ -1003,6 +1023,9 @@ class PackageController(base.BaseController):
             errors = e.error_dict
             error_summary = e.error_summary
             return self.edit(name_or_id, data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(name_or_id, data_dict)
 
     def _form_save_redirect(self, pkgname, action, package_type=None):
         '''This redirects the user to the CKAN package/read page,
@@ -1034,6 +1057,7 @@ class PackageController(base.BaseController):
 
         try:
             if request.method == 'POST':
+                csrf_token.validate(request.POST.get('csrf-token', ''))
                 get_action('package_delete')(context, {'id': id})
                 h.flash_notice(_('Dataset has been deleted.'))
                 h.redirect_to(controller='package', action='search')
@@ -1043,6 +1067,9 @@ class PackageController(base.BaseController):
             abort(403, _('Unauthorized to delete package %s') % '')
         except NotFound:
             abort(404, _('Dataset not found'))
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            h.redirect_to(controller='package', action='edit', id=id)
         return render('package/confirm_delete.html',
                       extra_vars={'dataset_type': dataset_type})
 
@@ -1062,6 +1089,7 @@ class PackageController(base.BaseController):
 
         try:
             if request.method == 'POST':
+                csrf_token.validate(request.POST.get('csrf-token', ''))
                 get_action('resource_delete')(context, {'id': resource_id})
                 h.flash_notice(_('Resource has been deleted.'))
                 pkg_dict = get_action('package_show')(None, {'id': id})
@@ -1077,6 +1105,9 @@ class PackageController(base.BaseController):
             abort(403, _('Unauthorized to delete resource %s') % '')
         except NotFound:
             abort(404, _('Resource not found'))
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            h.redirect_to(controller='package', action='resource_edit', id=id, resource_id=resource_id)
         return render('package/confirm_delete_resource.html',
                       {'dataset_type': self._get_package_type(id)})
 
@@ -1473,6 +1504,9 @@ class PackageController(base.BaseController):
             data['resource_id'] = resource_id
 
             try:
+                csrf_token.validate(data.get('csrf-token', ''))
+                data.pop('csrf-token', None)
+
                 if to_delete:
                     data['id'] = view_id
                     get_action('resource_view_delete')(context, data)
@@ -1490,6 +1524,11 @@ class PackageController(base.BaseController):
                 # This should never happen unless the user maliciously changed
                 # the resource_id in the url.
                 abort(403, _('Unauthorized to edit resource'))
+            except csrf_token.CsrfTokenValidationError:
+                h.flash_error(_('Security token error, please try again'))
+                view_type = request.GET.get('view_type')
+                h.redirect_to(controller='package', action='edit_view', id=id, resource_id=resource_id, view_type=view_type)
+                return
             else:
                 if not to_preview:
                     h.redirect_to(controller='package',
diff --git a/ckan/controllers/user.py b/ckan/controllers/user.py
index 87388ebad..c94c1b08b 100644
--- a/ckan/controllers/user.py
+++ b/ckan/controllers/user.py
@@ -16,6 +16,7 @@ import ckan.lib.captcha as captcha
 import ckan.lib.mailer as mailer
 import ckan.lib.navl.dictization_functions as dictization_functions
 import ckan.lib.authenticator as authenticator
+import ckan.lib.csrf_token as csrf_token
 import ckan.plugins as p
 
 from ckan.common import _, c, request, response
@@ -220,6 +221,12 @@ class UserController(base.BaseController):
                 abort(400, _('No user specified'))
         data_dict = {'id': id}
 
+        try:
+            csrf_token.validate(request.params.get('csrf-token', ''))
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(id, data_dict, {}, {})
+
         try:
             result = get_action('user_generate_apikey')(context, data_dict)
         except NotAuthorized:
@@ -340,6 +347,8 @@ class UserController(base.BaseController):
 
             email_changed = data_dict['email'] != c.userobj.email
 
+            csrf_token.validate(data_dict.get('csrf-token', ''))
+
             if (data_dict['password1'] and data_dict['password2']) \
                     or email_changed:
                 identity = {'login': c.user,
@@ -375,6 +384,9 @@ class UserController(base.BaseController):
             errors = {'oldpassword': [_('Password entered was incorrect')]}
             error_summary = {_('Old Password'): _('incorrect password')}
             return self.edit(id, data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(id, data_dict, {}, {})
 
     def login(self, error=None):
         # Do any plugin login stuff
diff --git a/ckan/lib/csrf_token.py b/ckan/lib/csrf_token.py
new file mode 100644
index 000000000..9eb29df99
--- /dev/null
+++ b/ckan/lib/csrf_token.py
@@ -0,0 +1,64 @@
+import os
+import base64
+import struct
+import random
+from ckan.common import c, session
+
+import logging
+log = logging.getLogger(__name__)
+
+class CsrfTokenValidationError(Exception):
+    pass
+
+def _get_current_token(user):
+    tokens = session.get('csrf_tokens', {})
+    return tokens.get(user, None)
+
+def _set_current_token(user, token):
+    tokens = session.get('csrf_tokens', {})
+    tokens[user] = token
+    session['csrf_tokens'] = tokens
+    session.save()
+
+def _generate_new_token():
+    token_bytes = os.urandom(64)
+    token = base64.urlsafe_b64encode(token_bytes)
+    return token
+
+def _get_user():
+    return c.user
+
+# Compare tokens in random order to avoid timing attacks
+def _compare_tokens(a, b):
+    if not a or not b or len(a) != len(b):
+        return False
+
+    indices = range(len(a))
+    random.shuffle(indices)
+
+    for i in indices:
+        if a[i] != b[i]:
+            return False
+
+    return True
+
+def generate():
+    user = _get_user()
+    if not user: return ''
+
+    existing_token = _get_current_token(user)
+    if existing_token:
+        return existing_token
+
+    token = _generate_new_token()
+    _set_current_token(user, token)
+    return token
+
+def validate(token):
+    user = _get_user()
+    if not user:
+        raise CsrfTokenValidationError()
+
+    existing_token = _get_current_token(user)
+    if not _compare_tokens(token, existing_token):
+        raise CsrfTokenValidationError()
diff --git a/ckan/lib/helpers.py b/ckan/lib/helpers.py
index 0d9a2ed8c..ad0d2ea30 100644
--- a/ckan/lib/helpers.py
+++ b/ckan/lib/helpers.py
@@ -46,6 +46,7 @@ import ckan.lib.uploader as uploader
 import ckan.authz as authz
 import ckan.plugins as p
 import ckan
+import ckan.lib.csrf_token as csrf_token
 
 from ckan.lib.pagination import Page
 from ckan.common import _, ungettext, c, g, request, session, json
@@ -2825,6 +2826,11 @@ def clean_html(html):
     return bleach_clean(text_type(html))
 
 
+@core_helper
+def generate_csrf_token():
+    return csrf_token.generate()
+
+
 core_helper(flash, name='flash')
 core_helper(localised_number)
 core_helper(localised_SI_number)
diff --git a/ckan/public/base/javascript/modules/confirm-action.js b/ckan/public/base/javascript/modules/confirm-action.js
index e55380926..68a5a64bb 100644
--- a/ckan/public/base/javascript/modules/confirm-action.js
+++ b/ckan/public/base/javascript/modules/confirm-action.js
@@ -100,6 +100,13 @@ this.ckan.module('confirm-action', function (jQuery) {
         var form = this.el.closest('form');
       }
 
+      var csrf = jQuery('<input/>', {
+        type: 'hidden',
+        name: 'csrf-token',
+        value: $('form[method=POST]').find('input[type=hidden][name=csrf-token]').attr('value') || this.el.attr('csrf-token')
+      });
+      csrf.appendTo(form);
+
       form.appendTo('body').submit();
     },
 
diff --git a/ckan/templates/admin/config.html b/ckan/templates/admin/config.html
index 2fb72909f..80b142e49 100644
--- a/ckan/templates/admin/config.html
+++ b/ckan/templates/admin/config.html
@@ -9,6 +9,7 @@
   {{ form.errors(error_summary) }}
 
   <form method='post' action="" id="admin-config-form" enctype="multipart/form-data">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     {% block admin_form %}
 
       {{ form.input('ckan.site_title', id='field-ckan-site-title', label=_('Site Title'), value=data['ckan.site_title'], error=error, classes=['control-medium']) }}
diff --git a/ckan/templates/admin/confirm_reset.html b/ckan/templates/admin/confirm_reset.html
index 9f0ba36ba..1bd6bb3cf 100644
--- a/ckan/templates/admin/confirm_reset.html
+++ b/ckan/templates/admin/confirm_reset.html
@@ -1,9 +1,11 @@
 {% extends "admin/base.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Reset") }}{% endblock %}
 
 {% block primary_content_inner %}
   <form action="{% url_for 'admin.reset_config' %}" method="post">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     <p>{{ _('Are you sure you want to reset the config?') }}</p>
     <p class="form-actions">
       <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
diff --git a/ckan/templates/admin/trash.html b/ckan/templates/admin/trash.html
index 5a82f1c32..c473e6117 100644
--- a/ckan/templates/admin/trash.html
+++ b/ckan/templates/admin/trash.html
@@ -1,8 +1,10 @@
 {% extends "admin/base.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block primary_content_inner %}
 <form method="POST" action="{{ h.url_for('admin.trash') }}" id="form-purge-all">
   <div class="form-actions">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     <input type="hidden" name="action" value="all">
     <a class="btn btn-danger purge-all"
        type="submit"
@@ -34,4 +36,4 @@
     </p>
   </div>
 </div>
-{% endblock %}
\ No newline at end of file
+{% endblock %}
diff --git a/ckan/templates/group/confirm_delete.html b/ckan/templates/group/confirm_delete.html
index ba01d3f1f..b2b532f9d 100644
--- a/ckan/templates/group/confirm_delete.html
+++ b/ckan/templates/group/confirm_delete.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -11,6 +12,7 @@
         <p>{{ _('Are you sure you want to delete group - {name}?').format(name=group_dict.name) }}</p>
         <p class="form-actions">
           <form id="group-confirm-delete-form" action="{% url_for group_type+'.delete', id=group_dict.name %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
           </form>
diff --git a/ckan/templates/group/confirm_delete_member.html b/ckan/templates/group/confirm_delete_member.html
index 2a52064ef..8ec770a10 100644
--- a/ckan/templates/group/confirm_delete_member.html
+++ b/ckan/templates/group/confirm_delete_member.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -11,6 +12,7 @@
         <p>{{ _('Are you sure you want to delete member - {name}?').format(name=user_dict.name) }}</p>
         <p class="form-actions">
           <form action="{% url_for group_type+'.member_delete', id=group_id %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <input type="hidden" name="user" value="{{ user_id }}" />
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
diff --git a/ckan/templates/group/member_new.html b/ckan/templates/group/member_new.html
index f7858fd6c..42249e350 100644
--- a/ckan/templates/group/member_new.html
+++ b/ckan/templates/group/member_new.html
@@ -11,6 +11,7 @@
   </h1>
   {% block form %}
   <form class="dataset-form add-member-form" method='post' id="add-member-form">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     <div class="row">
       <div class="col-md-5">
         <div class="form-group control-medium">
diff --git a/ckan/templates/group/snippets/group_form.html b/ckan/templates/group/snippets/group_form.html
index 69b10f5c9..381e0a331 100644
--- a/ckan/templates/group/snippets/group_form.html
+++ b/ckan/templates/group/snippets/group_form.html
@@ -1,6 +1,7 @@
 {% import 'macros/form.html' as form %}
 
 <form id="group-edit" class="dataset-form" method="post" data-module="basic-form" enctype="multipart/form-data">
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
   {% block error_summary %}
     {{ form.errors(error_summary) }}
   {% endblock %}
diff --git a/ckan/templates/organization/bulk_process.html b/ckan/templates/organization/bulk_process.html
index 7d00cf101..139de324f 100644
--- a/ckan/templates/organization/bulk_process.html
+++ b/ckan/templates/organization/bulk_process.html
@@ -1,4 +1,5 @@
 {% extends "organization/edit_base.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _('Edit datasets') }} {{ g.template_title_delimiter }} {{ super() }}{% endblock %}
 
@@ -34,6 +35,7 @@
       {% block form %}
         {% if page.item_count %}
           <form method="POST" data-module="basic-form">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <table class="table table-bordered table-header table-hover table-bulk-edit table-edit-hover" data-module="table-selectable-rows">
               <col width="8">
               <col width="120">
diff --git a/ckan/templates/organization/confirm_delete.html b/ckan/templates/organization/confirm_delete.html
index 2966b3d7e..347066247 100644
--- a/ckan/templates/organization/confirm_delete.html
+++ b/ckan/templates/organization/confirm_delete.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -11,6 +12,7 @@
         <p>{{ _('Are you sure you want to delete organization - {name}?').format(name=group_dict.name) }}</p>
         <p class="form-actions">
           <form id="organization-confirm-delete-form" action="{% url_for group_type+'.delete', id=group_dict.name %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
           </form>
diff --git a/ckan/templates/organization/confirm_delete_member.html b/ckan/templates/organization/confirm_delete_member.html
index 2a52064ef..8ec770a10 100644
--- a/ckan/templates/organization/confirm_delete_member.html
+++ b/ckan/templates/organization/confirm_delete_member.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -11,6 +12,7 @@
         <p>{{ _('Are you sure you want to delete member - {name}?').format(name=user_dict.name) }}</p>
         <p class="form-actions">
           <form action="{% url_for group_type+'.member_delete', id=group_id %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <input type="hidden" name="user" value="{{ user_id }}" />
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
diff --git a/ckan/templates/organization/member_new.html b/ckan/templates/organization/member_new.html
index 0da826f7c..88914210b 100644
--- a/ckan/templates/organization/member_new.html
+++ b/ckan/templates/organization/member_new.html
@@ -13,6 +13,7 @@
   </h1>
   {% block form %}
   <form class="dataset-form add-member-form" method='post'>
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     <div class="row">
       <div class="col-md-5">
         <div class="form-group control-medium">
diff --git a/ckan/templates/organization/members.html b/ckan/templates/organization/members.html
index 04380945a..cfe312a88 100644
--- a/ckan/templates/organization/members.html
+++ b/ckan/templates/organization/members.html
@@ -33,7 +33,7 @@
                 <a class="btn btn-default btn-sm" href="{{ h.url_for(group_type + '.member_new', id=group_dict.id, user=user_id) }}" title="{{ _('Edit') }}">
                 <i class="fa fa-wrench"></i>
               </a>
-              <a class="btn btn-danger btn-sm" href="{{ h.url_for(group_type + '.member_delete', id=group_dict.id, user=user_id) }}" data-module="confirm-action" data-module-content="{{ _('Are you sure you want to delete this member?') }}" title="{{ _('Delete') }}">{% block delete_button_text %}<i class="fa fa-times"></i>{% endblock %}</a>
+              <a class="btn btn-danger btn-sm" href="{{ h.url_for(group_type + '_member_delete', id=group_dict.id, user=user_id) }}" data-module="confirm-action" data-module-content="{{ _('Are you sure you want to delete this member?') }}" title="{{ _('Delete') }}" csrf-token="{{ h.generate_csrf_token() }}">{% block delete_button_text %}<i class="fa fa-times"></i>{% endblock %}</a>
             </div>
           </td>
         </tr>
diff --git a/ckan/templates/organization/snippets/organization_form.html b/ckan/templates/organization/snippets/organization_form.html
index f092bf4e1..f6824a732 100644
--- a/ckan/templates/organization/snippets/organization_form.html
+++ b/ckan/templates/organization/snippets/organization_form.html
@@ -1,6 +1,7 @@
 {% import 'macros/form.html' as form %}
 
 <form id='organization-edit-form' class="dataset-form" method="post" data-module="basic-form" enctype="multipart/form-data">
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
   {% block error_summary %}
     {{ form.errors(error_summary) }}
   {% endblock %}
diff --git a/ckan/templates/package/confirm_delete.html b/ckan/templates/package/confirm_delete.html
index 61013a12f..d713862e9 100644
--- a/ckan/templates/package/confirm_delete.html
+++ b/ckan/templates/package/confirm_delete.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -12,6 +13,7 @@
         <p>{{ _('Are you sure you want to delete dataset - {name}?').format(name=dataset) }}</p>
         <p class="form-actions">
           <form id='confirm-dataset-delete-form' action="{% url_for pkg_dict.type ~ '.delete', id=pkg_dict.name %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
           </form>
diff --git a/ckan/templates/package/confirm_delete_resource.html b/ckan/templates/package/confirm_delete_resource.html
index 74e82c508..796629361 100644
--- a/ckan/templates/package/confirm_delete_resource.html
+++ b/ckan/templates/package/confirm_delete_resource.html
@@ -1,4 +1,5 @@
 {% extends "page.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _("Confirm Delete") }}{% endblock %}
 
@@ -11,6 +12,7 @@
         <p>{{ _('Are you sure you want to delete resource - {name}?').format(name=h.resource_display_name(resource_dict)) }}</p>
         <p class="form-actions">
           <form id='confirm-resource-delete-form' action="{% url_for 'resource.delete', resource_id=resource_dict.id, id=pkg_id %}" method="post">
+            {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
             <button class="btn btn-danger" type="submit" name="cancel" >{{ _('Cancel') }}</button>
             <button class="btn btn-primary" type="submit" name="delete" >{{ _('Confirm Delete') }}</button>
           </form>
diff --git a/ckan/templates/package/edit_view.html b/ckan/templates/package/edit_view.html
index e470c20e8..ddc2e01e1 100644
--- a/ckan/templates/package/edit_view.html
+++ b/ckan/templates/package/edit_view.html
@@ -1,4 +1,5 @@
 {% extends "package/view_edit_base.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _('Edit view') }} {{ g.template_title_delimiter }} {{ h.resource_display_name(resource) }}{% endblock %}
 {% block form_title %}{{ _('Edit view') }}{% endblock %}
@@ -14,6 +15,7 @@
 
 {% block form %}
   <form class="dataset-form dataset-resource-form" method="post" data-module="basic-form resource-form">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     {% include 'package/snippets/view_form.html' %}
     <div class="form-actions">
       <button class="btn btn-danger pull-left" name="delete" value="Delete"> {{ _('Delete') }} </button>
diff --git a/ckan/templates/package/group_list.html b/ckan/templates/package/group_list.html
index cde880e21..ee7fa0f03 100644
--- a/ckan/templates/package/group_list.html
+++ b/ckan/templates/package/group_list.html
@@ -6,6 +6,7 @@
 
   {% if group_dropdown %}
     <form class="add-to-group" method="post">
+      {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
       <select id="field-add_group" name="group_added" data-module="autocomplete">
         {% for option in group_dropdown %}
           <option value="{{ option[0] }}"> {{ option[1] }}</option>
diff --git a/ckan/templates/package/new_view.html b/ckan/templates/package/new_view.html
index 173771f31..02480fdcb 100644
--- a/ckan/templates/package/new_view.html
+++ b/ckan/templates/package/new_view.html
@@ -1,4 +1,5 @@
 {% extends "package/view_edit_base.html" %}
+{% import 'macros/form.html' as form %}
 
 {% block subtitle %}{{ _('Add view') }} {{ g.template_title_delimiter }} {{ h.resource_display_name(resource) }}{% endblock %}
 {% block form_title %}{{ _('Add view') }}{% endblock %}
@@ -23,6 +24,7 @@
   {% endif %}
 
   <form class="dataset-form dataset-resource-form" method="post" data-module="basic-form resource-form">
+    {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
     {% include 'package/snippets/view_form.html' %}
     <div class="form-actions">
         <button class="btn btn-default {% if not h.resource_view_display_preview(data) %}hide{%endif%}" name="preview" value="True" type="submit">{{ _('Preview') }}</button>
diff --git a/ckan/templates/package/snippets/package_form.html b/ckan/templates/package/snippets/package_form.html
index 38fb31778..966d16680 100644
--- a/ckan/templates/package/snippets/package_form.html
+++ b/ckan/templates/package/snippets/package_form.html
@@ -4,6 +4,7 @@
 {# This provides a full page that renders a form for adding a dataset. It can
 then itself be extended to add/remove blocks of functionality. #}
 <form id="dataset-edit" class="dataset-form" method="post" action="{{ action }}" data-module="basic-form" novalidate>
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
   {% block stages %}
     {{ h.snippet('package/snippets/stages.html', stages=stage) }}
   {% endblock %}
diff --git a/ckan/templates/package/snippets/resource_form.html b/ckan/templates/package/snippets/resource_form.html
index fe3261bbe..041103b56 100644
--- a/ckan/templates/package/snippets/resource_form.html
+++ b/ckan/templates/package/snippets/resource_form.html
@@ -6,6 +6,7 @@
 
 
 <form id="resource-edit" class="dataset-form dataset-resource-form" method="post" action="{{ action }}" data-module="basic-form resource-form" enctype="multipart/form-data">
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
 
   {% block stages %}
     {# An empty stages variable will not show the stages #}
diff --git a/ckan/templates/user/edit_user_form.html b/ckan/templates/user/edit_user_form.html
index f63298b2a..40365a221 100644
--- a/ckan/templates/user/edit_user_form.html
+++ b/ckan/templates/user/edit_user_form.html
@@ -3,6 +3,8 @@
 <form id="user-edit-form" class="dataset-form" method="post" action="{{ action }}" enctype="multipart/form-data">
   {{ form.errors(error_summary) }}
 
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
+
   <fieldset>
     <legend>{{ _('Change details') }}</legend>
     {{ form.input('name', label=_('Username'), id='field-username', value=data.name, error=errors.name, classes=['control-medium'], attrs={'readonly': '', 'class': 'form-control'}) }}
diff --git a/ckan/views/admin.py b/ckan/views/admin.py
index 1b58adbb9..80eb109f3 100644
--- a/ckan/views/admin.py
+++ b/ckan/views/admin.py
@@ -8,6 +8,7 @@ from flask.views import MethodView
 import ckan.lib.app_globals as app_globals
 import ckan.lib.base as base
 import ckan.lib.helpers as h
+import ckan.lib.csrf_token as csrf_token
 import ckan.lib.navl.dictization_functions as dict_fns
 import ckan.logic as logic
 import ckan.model as model
@@ -119,11 +120,18 @@ class ConfigView(MethodView):
                         logic.parse_params(req,
                                            ignore_keys=CACHE_PARAMETERS))))
 
+            csrf_token.validate(data_dict.get('csrf-token', ''))
+            del data_dict['csrf-token']
             del data_dict['save']
             data = logic.get_action(u'config_option_update')({
                 u'user': g.user
             }, data_dict)
 
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            vars = {'data': data, 'errors': {},
+                    'error_summary': {}, 'form_items': items}
+            return base.render('admin/config.html', extra_vars=vars)
         except logic.ValidationError as e:
             items = _get_config_options()
             data = request.form
diff --git a/ckan/views/user.py b/ckan/views/user.py
index b94324232..df412106f 100644
--- a/ckan/views/user.py
+++ b/ckan/views/user.py
@@ -13,6 +13,7 @@ import ckan.lib.captcha as captcha
 import ckan.lib.helpers as h
 import ckan.lib.mailer as mailer
 import ckan.lib.navl.dictization_functions as dictization_functions
+import ckan.lib.csrf_token as csrf_token
 import ckan.logic as logic
 import ckan.logic.schema as schema
 import ckan.model as model
@@ -263,6 +264,12 @@ class EditView(MethodView):
         if not context[u'save']:
             return self.get(id)
 
+        try:
+            csrf_token.validate(request.form.get('csrf-token', ''))
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return h.redirect_to(u'user.read', id=id)
+
         if id in (g.userobj.id, g.userobj.name):
             current_user = True
         else:
