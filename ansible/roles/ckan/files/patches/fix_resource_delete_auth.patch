diff --git a/ckan/tests/controllers/test_package.py b/ckan/tests/controllers/test_package.py
index b1991e320..0ea1b1113 100644
--- a/ckan/tests/controllers/test_package.py
+++ b/ckan/tests/controllers/test_package.py
@@ -1418,7 +1418,7 @@ class TestResourceDelete(object):
             extra_environ=env
         )
         assert 403 == response.status_code
-        assert helpers.body_contains(response, "Unauthorized to delete package")
+        assert helpers.body_contains(response, "Unauthorized to delete resource")

     def test_sysadmins_can_delete_any_resource(self, app, sysadmin):
         owner_org = factories.Organization()
diff --git a/ckan/views/resource.py b/ckan/views/resource.py
index 7f22152d6..96654748b 100644
--- a/ckan/views/resource.py
+++ b/ckan/views/resource.py
@@ -443,7 +443,7 @@ class EditView(MethodView):


 class DeleteView(MethodView):
-    def _prepare(self, id: str):
+    def _prepare(self, resource_id: str):
         context = cast(Context, {
             u'model': model,
             u'session': model.Session,
@@ -451,12 +451,14 @@ class DeleteView(MethodView):
             u'auth_user_obj': current_user
         })
         try:
-            check_access(u'package_delete', context, {u'id': id})
+            check_access(u'resource_delete', context, {u'id': resource_id})
         except NotAuthorized:
             return base.abort(
                 403,
-                _(u'Unauthorized to delete package %s') % u''
+                _(u'Unauthorized to delete resource %s') % u''
             )
+        except NotFound:
+            return base.abort(404, _(u'Resource not found'))
         return context

     def post(self, package_type: str, id: str, resource_id: str) -> Response:
@@ -465,7 +467,7 @@ class DeleteView(MethodView):
                 u'{}_resource.edit'.format(package_type),
                 resource_id=resource_id, id=id
             )
-        context = self._prepare(id)
+        context = self._prepare(resource_id)

         try:
             get_action(u'resource_delete')(context, {u'id': resource_id})
@@ -487,7 +489,7 @@ class DeleteView(MethodView):
             return base.abort(404, _(u'Resource not found'))

     def get(self, package_type: str, id: str, resource_id: str) -> str:
-        context = self._prepare(id)
+        context = self._prepare(resource_id)
         try:
             resource_dict = get_action(u'resource_show')(
                 context, {
