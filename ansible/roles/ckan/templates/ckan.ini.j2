[DEFAULT]

debug = {{ debug_enabled }}

[server:main]

use = egg:Paste#http
host = 0.0.0.0
port = "{{ ckan_internal_port }}"

[app:main]

use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/

beaker.session.key = ckan
beaker.session.secret = {{ secret.ckan_config.beaker_session_secret }}

app_instance_uuid = {{ secret.ckan_config.app_instance_uuid }}

who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini

# Secure cookie & 4h timeout
who.secure = True
who.timeout = 14400

sqlalchemy.url = postgres://{{ database_ckan.username }}:{{ database_ckan.password }}@{{ database_ckan.host }}/{{ database_ckan.name }}

ckan.site_url = https://{{ public_facing_hostname }}
ckan.site_url_internally = https://{{ public_facing_hostname }}/data/

piwik.site_url = https://{{ analytics_server_public_facing_hostname }}
piwik.site_id = {{ analytics_site_id }}

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = true
ckan.auth.user_create_organizations = true
ckan.auth.user_delete_groups = true
ckan.auth.user_delete_organizations = true
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = false
ckan.auth.roles_that_cascade_to_sub_groups = admin
ckan.auth.public_user_details = false

ckan.site_id = {{ ckan_site_id }}
ckan.site_title = {{ ckan_site_name }}
ckan.site_logo =
ckan.site_description =

ckan.featured_orgs = {{ ckan_featured_orgs }}

ckan.plugins = {{ ckan_plugins }}

ckan.preview.xml_formats = xml xsd xsd+xml soap soap+xml rdf rdf+xml owl+xml atom rss wsdl wsdl+xml
ckan.views.default_views = wsdl_view text_view

ckanext.pages.editor = ckeditor

ckan.favicon = /images/icons/ckan.ico
ckan.gravatar_default = identicon

# Use this once ckan issue #2882 is fixed
#ckan.display_timezone = Europe/Helsinki

ckan.locale_default = fi
ckan.locale_order = fi en_GB sv en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered = fi sv en_GB
ckan.locales_filtered_out =
ckan.feeds.authority_name =
ckan.feeds.date =
ckan.feeds.author_name =
ckan.feeds.author_link =

scheming.presets = ckanext.scheming:presets.json
                   ckanext.fluent:presets.json
                   ckanext.apicatalog_scheming:presets.json

scheming.dataset_schemas = ckanext.apicatalog_scheming.schemas:dataset.json

# Disable sending error emails. Commented out because the default is None, and "None" is interpreted here as a string.
# email_to =
# error_email_from =

smtp.server = {{ email.smtp_server }}
smtp.starttls = False
smtp.mail_from = no-reply

ckanext.contact.mail_to = {{ email.contact }}
ckanext.contact.recipient_name =
ckanext.contact.subject = Palautetta Liitynt√§katalogista

ckan.harvest.mq.type = redis
ckan.harvest.mq.hostname = {{ redis.host }}
ckan.harvest.mq.port = {{ redis.port }}
ckan.harvest.mq.redis_db = {{ redis_harvest_database }}

ckanext.apicatalog.harvester_status_recipients = {{ ckan_harvester_status_email_recipients|join(' ') }}

ckanext-archiver.archive_dir = /tmp/archive
ckanext-archiver.max_content_length = 50000000
ckan.celery.queues = celery bulk priority

ckanext.saha.username = {{ saha.username }}
ckanext.saha.password = {{ saha.password }}
ckanext.saha.api_url = {{ saha.api_url }}

ofs.impl = pairtree

# 2.1 filestore:
ofs.storage_dir = {{ ckan_storage_path }}

# 2.2 filestore:
ckan.storage_path = {{ ckan_storage_path }}

solr_url = http://{{ solr.host }}:{{ solr.port }}/solr/ckan

ckan.tracking_enabled = true

ckan.max_resource_size = {{ ckan_max_resource_size }}

ckanext.paha.key_whitelist = {{ paha_key_whitelist }}

[loggers]

keys = root, ckan, ckanext

[handlers]

keys = console

[formatters]

keys = generic

[logger_root]

level = WARNING
handlers = console

[logger_ckan]

level = INFO
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]

{% if vagrant is defined %}
level = DEBUG
{% else %}
level = INFO
{% endif %}
handlers = console
qualname = ckanext
propagate = 0

[handler_console]

class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]

format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

[app:celery]

BROKER_URL = redis://{{ redis.host }}:{{ redis.port }}/{{ redis_celery_database }}
CELERY_RESULT_BACKEND = redis://{{ redis.host }}:{{ redis.port }}/{{ redis_celery_database }}
CELERY_RESULT_SERIALIZER = json
CELERY_TASK_SERIALIZER = json
BROKER_BACKEND =
BROKER_HOST =
CELERY_RESULT_DBURI =
CELERYD_CONCURRENCY = 4
