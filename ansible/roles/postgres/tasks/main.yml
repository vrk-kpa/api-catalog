---

- name: Install postgres
  apt: pkg={{ item }} state=latest
  with_items:
    - postgresql

- name: Copy postgres configurations
  template: src={{ item.file }} dest={{ item.dest }} owner=postgres group=postgres mode="0640"
  with_items:
  - { file: pg_hba.conf.j2, dest: /etc/postgresql/10/main/pg_hba.conf }
  - { file: postgresql.conf.j2, dest: /etc/postgresql/10/main/postgresql.conf }

- name: Generate self-signed SSL certificate
  command: openssl req -new -nodes -x509 -subj "/C=FI/ST=Helsinki/L=Helsinki/O=IT/CN={{ public_facing_hostname }}" -days 3650 -keyout "/var/lib/postgresql/10/main/server.key" -out "/var/lib/postgresql/10/main/server.crt" -extensions v3_ca creates="/var/lib/postgresql/10/main/server.crt"

- name: Set certificate file ownership and mode
  shell: chmod 600 /var/lib/postgresql/10/main/server.* && chown "postgres:postgres" /var/lib/postgresql/10/main/server.*

- name: Restart postgres
  service: name=postgresql state=restarted

- name: Setup postgres users
  become_user: postgres
  become: true
  postgresql_user: user={{ item.user }} password={{ item.password }} encrypted=yes
  with_items:
  - { user: "{{ database_ckan.username }}", password: "{{ database_ckan.password }}" }

- name: Setup postgres databases
  become_user: postgres
  postgresql_db: name={{ item.name }} owner={{ item.owner }} encoding={{ item.encoding }} lc_collate={{ item.collate }} lc_ctype={{ item.ctype }} template={{ item.template }}
  with_items:
  - { name: "{{ database_ckan.name }}", owner: "{{ database_ckan.username }}", encoding: 'UTF-8', collate: 'fi_FI.UTF-8', ctype: 'en_US.UTF-8', template: 'template0' }
  ignore_errors: True
